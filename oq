[1mdiff --git a/main.py b/main.py[m
[1mindex 24cd5ea..fd2060c 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -237,12 +237,18 @@[m [mdef process_logs(logs: List[str]) -> Optional[Dict[str, List[float]]]:[m
         parsed_logs=parsed_logs[m
     )[m
 [m
[32m+[m[32m    if logs_by_user is None:[m
[32m+[m[32m        return None[m
[32m+[m
     logs_by_user = make_equal_bin_size([m
         logs_by_user=logs_by_user,[m
         first_log=parsed_logs[0][0],[m
         last_log=parsed_logs[-1][0],[m
     )[m
 [m
[32m+[m[32m    if logs_by_user is None:[m
[32m+[m[32m        return None[m
[32m+[m
     data: Optional[Dict[str, List[float]]] = calculate_log_time([m
         logs_by_user=logs_by_user[m
     )[m
[36m@@ -269,6 +275,9 @@[m [mdef generate_report(path: str) -> Optional[str]:[m
 [m
     summary: Optional[Dict] = process_logs(logs=all_logs)[m
 [m
[32m+[m[32m    if summary is None:[m
[32m+[m[32m        return None[m
[32m+[m
     for user_name, user_data in summary.items():[m
         text: str = f"{user_name} {len(user_data)} {int(sum(user_data))}\n"[m
         text_to_print += text[m
[1mdiff --git a/test_main.py b/test_main.py[m
[1mindex 18c06d6..69cfa4c 100644[m
[1m--- a/test_main.py[m
[1m+++ b/test_main.py[m
[36m@@ -351,6 +351,18 @@[m [mdef test_generate_report_valid_file():[m
     assert result == expected_result[m
 [m
 [m
[32m+[m[32mdef test_generate_report_valid_file_with_invalid_data():[m
[32m+[m[32m    with open("valid_file_with_invalid_data", "w") as f:[m
[32m+[m[32m        f.write("14:02:03 ALICE99 Start\n")[m
[32m+[m
[32m+[m[32m    path = "test_data.txt"[m
[32m+[m[32m    expected_result = "ALICE99 4 240\nCHARLIE 3 37"[m
[32m+[m
[32m+[m[32m    result = generate_report(path)[m
[32m+[m
[32m+[m[32m    assert result == expected_result[m
[32m+[m
[32m+[m
 def test_generate_report_empty_file():[m
     path = "empty.txt"[m
 [m
